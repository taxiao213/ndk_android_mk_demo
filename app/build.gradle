apply plugin: 'com.android.application'
def support = rootProject.ext.dependencies

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        resConfigs('zh-rCN', "zh", "en")

        externalNativeBuild {
            ndkBuild {
                // 只生成 armeabi-v7a x86 arm64-v8a
                abiFilters "armeabi-v7a", "x86", "arm64-v8a"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/ndkBuild/Android.mk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        // pickFirsts:当出现重复文件，会使用第一个匹配的文件打包进入apk
        pickFirst 'lib/armeabi-v7a/libzbarjni.so'
        pickFirst 'lib/arm64-v8a/libzbarjni.so'
        pickFirst 'lib/x86/libzbarjni.so'
        pickFirst 'lib/x86_64/libzbarjni.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    support.each { k, v -> implementation v }
}
